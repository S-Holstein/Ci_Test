# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

# Nur Trigger
on:
  push:
    branches:
      - "main"
    paths:
      - 'Dummy/synced/**'
      - 'Dummy/.github/workflows/python_Ci.yml'


  pull_request:
    branches:
      - "main"
    paths:
      - 'Dummy/synced/**'
      - 'Dummy/.github/workflows/python_Ci.yml'



permissions:
 contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      # alternativ zu use : actions / checkout@v4 sparse checkout für ausgewählte Daten
    - name: Checkout Repository
      run: |
        git init
        git remote add origin https://github.com/S-Holstein/Ci_Test.git
        git config core.sparseCheckout true
        echo "synced/" >> .git/info/sparse-checkout
        echo ".github/workflows/python_Ci.yml" >> .git/info/sparse-checkout
        git pull origin main
  

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi




    - name: Run black and show diff
      run: |
        black .  # Wende black an, um den Code zu formatieren
        git diff  # Zeige die Änderungen an, die von black vorgenommen wurden



#    - name: Final format check with black
#      run: black --check .






    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest




